CMAKE_MINIMUM_REQUIRED (VERSION 3.4)

PROJECT (engine VERSION 0.0.1)

SET(BUILD_TESTING flase)

SET(PROJECT_ROOT_DIR ${PROJECT_SOURCE_DIR})

# 默认Debug 模式
SET(CMAKE_BUILD_TYPE "Debug")

# 外部库
ADD_SUBDIRECTORY(deps)

# 应用程序
ADD_SUBDIRECTORY(tests)

#跨平台测试
IF(WIN32)
    MESSAGE("WIN32")
ELSEIF(APPLE)
    MESSAGE("MacOS")
ELSEIF(UNIX)
    MESSAGE("Linux")
ENDIF()

#指定头文件路径
INCLUDE_DIRECTORIES(${PROJECT_ROOT_DIR}/deps)
INCLUDE_DIRECTORIES(${PROJECT_ROOT_DIR}/include)
INCLUDE_DIRECTORIES(${PROJECT_ROOT_DIR}/include/core)
INCLUDE_DIRECTORIES(${PROJECT_ROOT_DIR}/include/tools)

#读取Src目录
AUX_SOURCE_DIRECTORY(src DIR_SRCS)
AUX_SOURCE_DIRECTORY(src/core DIR_SRCS)
AUX_SOURCE_DIRECTORY(src/tools DIR_SRCS)

#编译文件
ADD_LIBRARY(${PROJECT_NAME} ${DIR_SRCS})

#输出路径
SET(LIBRARY_OUTPUT_PATH ${PROJECT_ROOT_DIR}/build/bin)

#链接库
IF(WIN32)
    TARGET_LINK_LIBRARIES(${PROJECT_NAME} glfw3 glad)
ELSEIF(APPLE)
    TARGET_LINK_LIBRARIES(${PROJECT_NAME} glfw3 glad pthread)
ELSEIF(UNIX)
    TARGET_LINK_LIBRARIES(${PROJECT_NAME} GL glfw3 glad pthread dl X11 Xi Xrandr Xxf86vm Xcursor Xinerama)
ENDIF()

#拷贝资源
FILE(COPY ${PROJECT_SOURCE_DIR}/shader DESTINATION ${PROJECT_ROOT_DIR}/build/bin)
# FILE(COPY ${PROJECT_SOURCE_DIR}/source DESTINATION ${PROJECT_ROOT_DIR}/build/bin)

#设置编译选项
IF(WIN32)
    # DEBUG RELEASE
    SET(CMAKE_CXX_FLAGS_DEBUG "$ENV{CXXFLAGS} -m64 -std=c++11 -Wall")
    SET(CMAKE_CXX_FLAGS_RELEASE "$ENV{CXXFLAGS} -m64 -std=c++11 -Wall")

ELSEIF(APPLE)
    SET(CMAKE_CXX_FLAGS_DEBUG "$ENV{CXXFLAGS} -m64 -std=c++11 -O0 -Wall -g")
    SET(CMAKE_CXX_FLAGS_RELEASE "$ENV{CXXFLAGS} -m64 -std=c++11 -O3 -Wall")

ELSEIF(UNIX)
    SET(CMAKE_CXX_FLAGS_DEBUG "$ENV{CXXFLAGS} -m64 -std=c++11 -O0 -Wall -g")
    SET(CMAKE_CXX_FLAGS_RELEASE "$ENV{CXXFLAGS} -m64 -std=c++11 -O3 -Wall")
ENDIF()
